{"config": {"indexing": "full", "lang": ["en"], "min_search_length": 3, "prebuild_index": false, "separator": "[\\s\\-]+"}, "docs": [{"location": "", "text": "mkdocs-mdpo-plugin \u00b6 Translations for Mkdocs using PO files, fully customizable. Compatible with mkdocs-material , based on mdpo . Install \u00b6 pip install mkdocs-mdpo-plugin Usage \u00b6 Enable the plugin in your mkdocs.yml : plugins : - mdpo Minimal configuration \u00b6 With mkdocs-material \u00b6 theme : name : material language : en extra : alternate : - name : English lang : en - name : Espa\u00f1ol link : es lang : es plugins : - mdpo Standalone \u00b6 plugins : - mdpo : languages : - en # first language is the original - es Both previous configurations will create the same layout of files building the documentation. Given the next layout in a docs/ directory: docs \u2514\u2500\u2500 index.md After the build, you will get: docs \u251c\u2500\u2500 es \u2502 \u2514\u2500\u2500 index.md.po \u2514\u2500\u2500 index.md Just translate the strings in docs/es/index.md.po into Spanish, build again with mkdocs build and the site/ directory will look like: site \u251c\u2500\u2500 404.html \u251c\u2500\u2500 assets \u2502 \u251c\u2500\u2500 images \u2502 \u251c\u2500\u2500 javascripts \u2502 \u2514\u2500\u2500 stylesheets \u251c\u2500\u2500 es \u2502 \u2514\u2500\u2500 index.html \u251c\u2500\u2500 index.html \u251c\u2500\u2500 sitemap.xml \u2514\u2500\u2500 sitemap.xml.gz How does it works \u00b6 mkdocs-mdpo-plugin is based in mdpo which is a program to translate CommonMark compliant Markdown content using PO files. Tip See also the traditional approach for Markdown translations and mdpo approach . As with mkdocs you write Python-Markdown 's implementation of Markdown, mkdocs-mdpo-plugin uses the xml.etree.ElementTree to translate the rest messages of custom HTML created by the extensions . This is the reason why for some of them the translation process must be adjusted somewhat to be supported correctly (see Extensions support ). Known limitations \u00b6 The command mkdocs serve doesn't work if you store the PO files inside the documentation folder. Use another layout like the explained in locale_dir configuration . Currently, edited messages are not marked as fuzzy like xgtettext does. Projects using mkdocs-mdpo-plugin \u00b6 http-request-codegen", "title": "Home"}, {"location": "#mkdocs-mdpo-plugin", "text": "Translations for Mkdocs using PO files, fully customizable. Compatible with mkdocs-material , based on mdpo .", "title": "mkdocs-mdpo-plugin"}, {"location": "#install", "text": "pip install mkdocs-mdpo-plugin", "title": "Install"}, {"location": "#usage", "text": "Enable the plugin in your mkdocs.yml : plugins : - mdpo", "title": "Usage"}, {"location": "#minimal-configuration", "text": "", "title": "Minimal configuration"}, {"location": "#with-mkdocs-material", "text": "theme : name : material language : en extra : alternate : - name : English lang : en - name : Espa\u00f1ol link : es lang : es plugins : - mdpo", "title": "With mkdocs-material"}, {"location": "#standalone", "text": "plugins : - mdpo : languages : - en # first language is the original - es Both previous configurations will create the same layout of files building the documentation. Given the next layout in a docs/ directory: docs \u2514\u2500\u2500 index.md After the build, you will get: docs \u251c\u2500\u2500 es \u2502 \u2514\u2500\u2500 index.md.po \u2514\u2500\u2500 index.md Just translate the strings in docs/es/index.md.po into Spanish, build again with mkdocs build and the site/ directory will look like: site \u251c\u2500\u2500 404.html \u251c\u2500\u2500 assets \u2502 \u251c\u2500\u2500 images \u2502 \u251c\u2500\u2500 javascripts \u2502 \u2514\u2500\u2500 stylesheets \u251c\u2500\u2500 es \u2502 \u2514\u2500\u2500 index.html \u251c\u2500\u2500 index.html \u251c\u2500\u2500 sitemap.xml \u2514\u2500\u2500 sitemap.xml.gz", "title": "Standalone"}, {"location": "#how-does-it-works", "text": "mkdocs-mdpo-plugin is based in mdpo which is a program to translate CommonMark compliant Markdown content using PO files. Tip See also the traditional approach for Markdown translations and mdpo approach . As with mkdocs you write Python-Markdown 's implementation of Markdown, mkdocs-mdpo-plugin uses the xml.etree.ElementTree to translate the rest messages of custom HTML created by the extensions . This is the reason why for some of them the translation process must be adjusted somewhat to be supported correctly (see Extensions support ).", "title": "How does it works"}, {"location": "#known-limitations", "text": "The command mkdocs serve doesn't work if you store the PO files inside the documentation folder. Use another layout like the explained in locale_dir configuration . Currently, edited messages are not marked as fuzzy like xgtettext does.", "title": "Known limitations"}, {"location": "#projects-using-mkdocs-mdpo-plugin", "text": "http-request-codegen", "title": "Projects using mkdocs-mdpo-plugin"}]}